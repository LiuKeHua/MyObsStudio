// Parameters
/// OBS
uniform float4x4 ViewProj;
/// Blur
uniform texture2d u_image;
uniform float2 u_imageSize;
uniform float2 u_imageTexel;
uniform int u_radius;
uniform int u_diameter;
uniform float2 u_texelDelta;

// Data
sampler_state pointSampler {
	Filter    = Point;
	AddressU  = Clamp;
	AddressV  = Clamp;
	MinLOD    = 0;
	MaxLOD    = 0;
};

struct VertDataIn {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};

struct VertDataOut {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};

VertDataOut VSDefault(VertDataIn v_in)
{
	VertDataOut vert_out;
	vert_out.pos = mul(float4(v_in.pos.xyz, 1.0), ViewProj);
	vert_out.uv  = v_in.uv;
	return vert_out;
}

// Box Blur
float4 BlurFunc(float2 uv, float4 rgba) {
	float4 final = rgba;
	for (int k = 1; k <= u_radius; k++) {
		final += u_image.SampleLevel(pointSampler, uv + (u_texelDelta * k), 0);
		final += u_image.SampleLevel(pointSampler, uv - (u_texelDelta * k), 0);
	}
	return final / u_diameter;
}

float4 PSBox(VertDataOut v_in) : TARGET {
	float4 rgba = u_image.SampleLevel(pointSampler, v_in.uv, 0);
	return BlurFunc(v_in.uv, rgba);
}

technique Draw
{
	pass
	{
		vertex_shader = VSDefault(v_in);
		pixel_shader  = PSBox(v_in);
	}
}
